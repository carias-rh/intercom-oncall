apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: intercom-oncall
    app.kubernetes.io/component: intercom-oncall
    app.kubernetes.io/instance: intercom-oncall
    app.kubernetes.io/name: intercom-oncall
    app.kubernetes.io/part-of: intercom
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.9-ubi8
  name: intercom-oncall
  namespace: lx-snow
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: intercom-oncall
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: intercom-oncall
        deploymentconfig: intercom-oncall
    spec:
      containers:
      - env:
        - name: SSO-PIN
          valueFrom:
            secretKeyRef:
              key: SSO-PIN
              name: skype-credentials
        - name: SKYPE_USERNAME
          valueFrom:
            secretKeyRef:
              key: SKYPE_USERNAME
              name: skype-credentials
        - name: SKYPE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SKYPE_PASSWORD
              name: skype-credentials
        image: image-registry.openshift-image-registry.svc:5000/lx-snow/intercom-oncall@sha256:eb75f5ae62cdce180e99a2a78634e8188b34bd48d96264f4c756ba21b2286294
        imagePullPolicy: Always
        name: intercom-oncall
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30